<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.opendaylight.odlparent</groupId>
        <artifactId>odlparent</artifactId>
        <version>1.6.0-Beryllium</version>
        <relativePath />
    </parent>

    <groupId>org.opendaylight.tutorials</groupId>
    <artifactId>hello-parent</artifactId>
    <version>3.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

        <properties>
            <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

            <!-- Build Plugin Versions -->
            <controller.config.version>0.4.0-Beryllium</controller.config.version>
            <controller.mdsal.version>1.3.0-Beryllium</controller.mdsal.version>
            
            <netconf.parent.version>1.0.0-Beryllium</netconf.parent.version>
            <netconf.restconf.version>1.3.0-Beryllium</netconf.restconf.version>
            <jmxGeneratorPath>src/main/yang-gen-config</jmxGeneratorPath>
            <salGeneratorPath>src/main/yang-gen-sal</salGeneratorPath>

            <yangtools.version>0.8.0-Beryllium</yangtools.version>
            <yangtools.binding.version>0.8.0-Beryllium</yangtools.binding.version>
           
	       <mdsal.version>2.0.0-Beryllium</mdsal.version>
	       <mdsal.model.version>0.8.0-Beryllium</mdsal.model.version>


            <controller.karaf.branding.version>1.2.0-Beryllium</controller.karaf.branding.version>
            <controller.karaf.resources.version>1.6.0-Beryllium</controller.karaf.resources.version>
            <controller.karaf.empty.version>1.6.0-Beryllium</controller.karaf.empty.version>


            <pax.logging.service.version>1.8.2</pax.logging.service.version>
            <pax.logging.api.version>1.8.2</pax.logging.api.version>
            <dlux.version>0.3.0-Beryllium</dlux.version>

            <!-- 项目其他依赖-->
           <!-- <karaf.maven.version>3.0.1</karaf.maven.version>-->
            <mojo.build.helper.maven.plugin.version>1.8</mojo.build.helper.maven.plugin.version>
            <!-- Test Libraries -->
            <karaf.version>3.0.3</karaf.version>
            <powermock.version>1.5.6</powermock.version>
            <junitparams.version>1.0.3</junitparams.version>
            <javafasterxml.version>3.1.3</javafasterxml.version>
        </properties>

    <dependencyManagement>
        <dependencies>
            <!-- This project -->
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hello-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hello-impl</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>hello-features</artifactId>
                <classifier>features</classifier>
                <type>xml</type>
                <version>${project.version}</version>
            </dependency>


            <!--dependency controllrt config-api -->
            <dependency>
                <groupId>org.opendaylight.controller</groupId>
                <artifactId>config-api</artifactId>
                <version>${controller.config.version}</version>
            </dependency>
            <!-- Testing Dependencies -->
            <!-- INTERNAL TODO: Do we need this or can odlparent handle this? This
                provides support for Unit Tests since this isnt defined as a standard at
                the ODL parent level -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>1.1.3</version>
                <scope>test</scope>
                <!-- This defines this as being within test scope, hence it may appear
                    that these dependencies are repeated in this pom, but they are for different
                    scopes -->
            </dependency>

            <!-- YANG tools -->
            <dependency>
                <groupId>org.opendaylight.yangtools</groupId>
                <artifactId>yangtools-artifacts</artifactId>
                <version>${yangtools.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.opendaylight.mdsal</groupId>
                <artifactId>mdsal-artifacts</artifactId>
                <version>${mdsal.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.opendaylight.mdsal.model</groupId>
                <artifactId>mdsal-model-artifacts</artifactId>
                <version>${mdsal.model.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Controller infrastructure -->
            <dependency>
                <groupId>org.opendaylight.controller</groupId>
                <artifactId>config-artifacts</artifactId>
                <version>${controller.config.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.opendaylight.controller</groupId>
                <artifactId>mdsal-artifacts</artifactId>
                <version>${controller.mdsal.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.opendaylight.netconf</groupId>
                <artifactId>restconf-artifacts</artifactId>
                <version>${netconf.restconf.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.opendaylight.netconf</groupId>
                <artifactId>netconf-artifacts</artifactId>
                <version>${netconf.parent.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <!-- test 依赖-->
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <configuration>
                        <filesets>
                            <fileset>
                                <directory>${jmxGeneratorPath}</directory>
                                <includes>
                                    <include>**</include>
                                </includes>
                            </fileset>
                            <fileset>
                                <directory>${salGeneratorPath}</directory>
                                <includes>
                                    <include>**</include>
                                </includes>
                            </fileset>
                        </filesets>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${mojo.build.helper.maven.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>add-source</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${jmxGeneratorPath}</source>
                                    <source>${salGeneratorPath}</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.opendaylight.yangtools</groupId>
                    <artifactId>yang-maven-plugin</artifactId>
                    <version>${yangtools.version}</version>
                    <executions>
                        <execution>
                            <id>config</id>
                            <goals>
                                <goal>generate-sources</goal>
                            </goals>
                            <configuration>
                                <codeGenerators>
                                    <generator>
                                        <codeGeneratorClass>org.opendaylight.controller.config.yangjmxgenerator.plugin.JMXGenerator</codeGeneratorClass>
                                        <outputBaseDir>${jmxGeneratorPath}</outputBaseDir>
                                        <additionalConfiguration>
                                            <namespaceToPackage1>urn:opendaylight:params:xml:ns:yang:controller==org.opendaylight.controller.config.yang</namespaceToPackage1>
                                        </additionalConfiguration>
                                    </generator>
                                    <generator>
                                        <codeGeneratorClass>org.opendaylight.yangtools.maven.sal.api.gen.plugin.CodeGeneratorImpl</codeGeneratorClass>
                                        <outputBaseDir>${salGeneratorPath}</outputBaseDir>
                                    </generator>
                                </codeGenerators>
                                <inspectDependencies>true</inspectDependencies>
                            </configuration>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.opendaylight.controller</groupId>
                            <artifactId>yang-jmx-generator-plugin</artifactId>
                            <version>${controller.config.version}</version>
                            <scope>compile</scope>
                        </dependency>
                        <dependency>
                            <groupId>org.opendaylight.mdsal</groupId>
                            <artifactId>maven-sal-api-gen-plugin</artifactId>
                            <version>${yangtools.version}</version>
                            <scope>compile</scope>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <executions>
                        <execution>
                            <phase>process-sources</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <failsOnError>true</failsOnError>
                        <configLocation>odl_checks.xml</configLocation>
                        <consoleOutput>true</consoleOutput>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        <sourceDirectory>${project.basedir}</sourceDirectory>
                        <includes>**\/*.yang,**\/*.java,**\/*.xml,**\/*.ini,**\/*.sh,**\/*.bat</includes>
                        <excludes>**\/target\/,**\/bin\/,**\/third-party,**\/yang-gen-sal\/,**\/node\/,**\/node_modules\/, **\/vendor\/</excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <extensions>true</extensions>
                    <configuration>
                        <instructions>
                            <Bundle-Name>${project.groupId}.${project.artifactId}</Bundle-Name>
                        </instructions>
                        <manifestLocation>${project.build.directory}/META-INF</manifestLocation>
                    </configuration>
                </plugin>
                <!--This plugin's configuration is used to store Eclipse m2e settings
                    only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.opendaylight.yangtools</groupId>
                                        <artifactId>yang-maven-plugin</artifactId>
                                        <versionRange>[0.5,)</versionRange>
                                        <goals>
                                            <goal>generate-sources</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute />
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-checkstyle-plugin</artifactId>
                                        <versionRange>[2.13,)</versionRange>
                                        <goals>
                                            <goal>check</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
